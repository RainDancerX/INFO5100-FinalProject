/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.snapshop.form;

import javax.swing.table.DefaultTableModel;
import com.snapshop.util.DatabaseConnection;
import java.awt.Window;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author lucas
 */
public class OrderMgm extends javax.swing.JPanel {

    /**
     * Creates new form OrderMgm
     */
    public OrderMgm() {
        initComponents();
        loadOrderData();
    }

    private void loadOrderData() {
        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT orderId, customerId, totalAmount, status, createdAt, paymentMethod, shippingAddress FROM orders";

        try (Connection connection = DatabaseConnection.getConnection(); PreparedStatement statement = connection.prepareStatement(query); ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                int orderId = resultSet.getInt("orderId");
                int customerId = resultSet.getInt("customerId");
                String totalAmount = String.format("$%.2f", resultSet.getDouble("totalAmount"));
                String status = resultSet.getString("status");
                String createdAt = resultSet.getTimestamp("createdAt").toString();
                String paymentMethod = resultSet.getString("paymentMethod");
                String shippingAddress = resultSet.getString("shippingAddress");

                model.addRow(new Object[]{orderId, customerId, totalAmount, status, createdAt, paymentMethod, shippingAddress});
            }

        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Failed to load order data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void changeOrderStatus(String newStatus) {
        int selectedRow = orderTable.getSelectedRow();

        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select an order to update.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        int orderId = (int) orderTable.getValueAt(selectedRow, 0); // Assuming orderId is in the first column

        String updateQuery = "UPDATE orders SET status = ? WHERE orderId = ?";

        try (Connection connection = DatabaseConnection.getConnection(); PreparedStatement statement = connection.prepareStatement(updateQuery)) {

            statement.setString(1, newStatus);
            statement.setInt(2, orderId);

            int rowsAffected = statement.executeUpdate();

            if (rowsAffected > 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Order status updated to " + newStatus + ".", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                loadOrderData(); // Refresh the table
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Failed to update order status.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "An error occurred while updating the order status.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        shippedBtn = new javax.swing.JButton();
        cancelledBtn = new javax.swing.JButton();
        pendingBtn = new javax.swing.JButton();
        deliveredBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        orderTable.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "customerId", "amount", "status", "createdAt", "payment", "address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        orderTable.setRowHeight(30);
        jScrollPane1.setViewportView(orderTable);
        if (orderTable.getColumnModel().getColumnCount() > 0) {
            orderTable.getColumnModel().getColumn(0).setMinWidth(30);
            orderTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            orderTable.getColumnModel().getColumn(0).setMaxWidth(30);
            orderTable.getColumnModel().getColumn(1).setMinWidth(75);
            orderTable.getColumnModel().getColumn(1).setPreferredWidth(75);
            orderTable.getColumnModel().getColumn(1).setMaxWidth(75);
        }

        jPanel1.setOpaque(false);

        shippedBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        shippedBtn.setForeground(new java.awt.Color(0, 102, 102));
        shippedBtn.setText("Shipped");
        shippedBtn.setBorder(null);
        shippedBtn.setBorderPainted(false);
        shippedBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        shippedBtn.setFocusPainted(false);
        shippedBtn.setFocusable(false);
        shippedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shippedBtnActionPerformed(evt);
            }
        });

        cancelledBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        cancelledBtn.setForeground(new java.awt.Color(153, 0, 0));
        cancelledBtn.setText("Cancelled");
        cancelledBtn.setBorder(null);
        cancelledBtn.setBorderPainted(false);
        cancelledBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelledBtn.setFocusPainted(false);
        cancelledBtn.setFocusable(false);
        cancelledBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelledBtnActionPerformed(evt);
            }
        });

        pendingBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        pendingBtn.setForeground(new java.awt.Color(204, 204, 0));
        pendingBtn.setText("Pending");
        pendingBtn.setBorder(null);
        pendingBtn.setBorderPainted(false);
        pendingBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pendingBtn.setFocusPainted(false);
        pendingBtn.setFocusable(false);
        pendingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingBtnActionPerformed(evt);
            }
        });

        deliveredBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        deliveredBtn.setForeground(new java.awt.Color(0, 102, 102));
        deliveredBtn.setText("Delivered");
        deliveredBtn.setBorder(null);
        deliveredBtn.setBorderPainted(false);
        deliveredBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deliveredBtn.setFocusPainted(false);
        deliveredBtn.setFocusable(false);
        deliveredBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveredBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(153, 0, 0));
        deleteBtn.setText("Delete");
        deleteBtn.setBorder(null);
        deleteBtn.setBorderPainted(false);
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.setFocusPainted(false);
        deleteBtn.setFocusable(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deliveredBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cancelledBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(shippedBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pendingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(pendingBtn)
                .addGap(18, 18, 18)
                .addComponent(shippedBtn)
                .addGap(18, 18, 18)
                .addComponent(deliveredBtn)
                .addGap(18, 18, 18)
                .addComponent(cancelledBtn)
                .addGap(18, 18, 18)
                .addComponent(deleteBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pendingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingBtnActionPerformed
        // TODO add your handling code here:
        changeOrderStatus("Pending");
    }//GEN-LAST:event_pendingBtnActionPerformed

    private void shippedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shippedBtnActionPerformed
        // TODO add your handling code here:
        changeOrderStatus("Shipped");
    }//GEN-LAST:event_shippedBtnActionPerformed

    private void deliveredBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveredBtnActionPerformed
        // TODO add your handling code here:
        changeOrderStatus("Delivered");
    }//GEN-LAST:event_deliveredBtnActionPerformed

    private void cancelledBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelledBtnActionPerformed
        // TODO add your handling code here:
        changeOrderStatus("Cancelled");
    }//GEN-LAST:event_cancelledBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        // Check if a row is selected
        int selectedRow = orderTable.getSelectedRow();

        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select an order to delete.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Confirm deletion
        int confirm = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "Are you sure you want to delete the selected order? This action cannot be undone.",
                "Confirm Deletion",
                javax.swing.JOptionPane.YES_NO_OPTION
        );

        if (confirm != javax.swing.JOptionPane.YES_OPTION) {
            return;
        }

        // Get the orderId of the selected row
        int orderId = (int) orderTable.getValueAt(selectedRow, 0); // Assuming orderId is in the first column

        String deleteQuery = "DELETE FROM orders WHERE orderId = ?";

        try (Connection connection = DatabaseConnection.getConnection(); PreparedStatement statement = connection.prepareStatement(deleteQuery)) {

            statement.setInt(1, orderId);
            int rowsAffected = statement.executeUpdate();

            if (rowsAffected > 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Order deleted successfully.", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                loadOrderData(); // Refresh the table
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Failed to delete the order.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "An error occurred while deleting the order.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelledBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton deliveredBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton pendingBtn;
    private javax.swing.JButton shippedBtn;
    // End of variables declaration//GEN-END:variables
}
