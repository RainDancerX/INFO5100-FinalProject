/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.snapshop.form;

import com.snapshop.component.CartItemComponent;
import com.snapshop.controller.PlatformController;
import com.snapshop.event.CheckoutListener;
import com.snapshop.model.Cart;
import com.snapshop.model.Cart.CartItem;
import com.snapshop.model.Customer;
import com.snapshop.swing.ScrollBar;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author lucas
 */
public class MyCart extends javax.swing.JPanel {

    private PlatformController controller;
    private Customer currentUser;
    private int customerId;
    private int cartId;
    private Cart cart;

    private CheckoutListener checkoutListener;

    /**
     * Creates new form MyCart
     */
    public MyCart(CheckoutListener checkoutListener) {
        this.checkoutListener = checkoutListener;
        initComponents();
        scroll.setVerticalScrollBar(new ScrollBar());
        controller = PlatformController.getInstance();
        loadCartData();
        init();
    }

    private void init() {
        controller = PlatformController.getInstance();
        currentUser = (Customer) controller.getCurrentUser();
        customerId = currentUser.getCustomerId();
        cartId = controller.getCartId();
    }

    // Load the cart data from the database
    private void loadCartData() {
        SwingUtilities.invokeLater(() -> {
            cart = Cart.loadMyCart(customerId);
//            cart = cartController.loadMyCart();
            if (cart != null) {
                // Clear existing items
                panelItem.removeAll();

                // Add each item from the cart to the UI
                for (CartItem cartItem : cart.getCartItems()) {
                    CartItemComponent cartItemComponent = new CartItemComponent(cart, this);
                    cartItemComponent.setData(cartItem);
                    panelItem.add(cartItemComponent);
                }

                // Update the UI
                panelItem.repaint();
                panelItem.revalidate();
            }
            DecimalFormat df = new DecimalFormat("$#, #00.00");
            totalAmount.setText(df.format(cart.getTotalAmount()));
            if (cart.getCartItems().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Your Cart is empty!", "INFO", JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    public void refreshTotalAmount() {
        if (cart != null) {
            DecimalFormat df = new DecimalFormat("$#,##0.00");
            totalAmount.setText(df.format(cart.getTotalAmount()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scroll = new javax.swing.JScrollPane();
        panelItem = new com.snapshop.swing.PanelItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        totalAmount = new javax.swing.JLabel();
        checkoutBtn = new javax.swing.JButton();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1170, 697));

        scroll.setBorder(null);
        scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scroll.setViewportView(panelItem);

        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("TOTAL AMOUNT");

        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));

        totalAmount.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        totalAmount.setForeground(new java.awt.Color(255, 51, 51));
        totalAmount.setText("123");

        checkoutBtn.setBackground(new java.awt.Color(255, 204, 51));
        checkoutBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        checkoutBtn.setForeground(new java.awt.Color(0, 0, 0));
        checkoutBtn.setText("Proceed To Checkout");
        checkoutBtn.setBorderPainted(false);
        checkoutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkoutBtn.setFocusPainted(false);
        checkoutBtn.setOpaque(true);
        checkoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(totalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 728, Short.MAX_VALUE)
                .addComponent(checkoutBtn)
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(totalAmount)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutBtnActionPerformed
        // TODO add your handling code here:
        // Check if the cart is empty
        if (cart == null || cart.getCartItems().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "Your cart is empty! Add items before proceeding to checkout.",
                    "Cart Empty",
                    JOptionPane.WARNING_MESSAGE
            );
            return; // Do not proceed to checkout
        }

        // Notify the listener to switch to the checkout panel
        if (checkoutListener != null) {
            checkoutListener.onCheckout();
        }
    }//GEN-LAST:event_checkoutBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private com.snapshop.swing.PanelItem panelItem;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JLabel totalAmount;
    // End of variables declaration//GEN-END:variables
}
