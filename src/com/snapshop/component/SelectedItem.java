/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.snapshop.component;

import com.snapshop.controller.PlatformController;
import com.snapshop.event.AddToCartListener;
import com.snapshop.model.ModelItem;
import com.snapshop.util.DatabaseConnection;
import java.sql.Connection; // Add this import
import java.sql.PreparedStatement; // Add this import
import java.sql.ResultSet; // Add this import
import java.sql.SQLException; // Add this import
import java.text.DecimalFormat;

/**
 *
 * @author lucas
 */
public class SelectedItem extends javax.swing.JPanel {

    private ModelItem data;
    private AddToCartListener listener;
    private PlatformController controller;
    private int cartId;

    /**
     * Creates new form SelectedItem
     */
    public SelectedItem(AddToCartListener listener) {
        this.listener = listener;
        initComponents();
        controller = PlatformController.getInstance();
        cartId = controller.getCartId();
    }

    public ModelItem getData() {
        return data;
    }

    public void setData(ModelItem data) {
        this.data = data;
        lbItemName.setText(data.getItemName());
        txtDescription.setText(data.getDescription());
        lbBrand.setText(data.getBrand());
        DecimalFormat df = new DecimalFormat("$#, #00.00");
        lbPrice.setText(df.format(data.getPrice()));
        pics.setImage(data.getImage());
        pics.repaint();

        // Fetch quantity from the database using cartId and itemId
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            connection = DatabaseConnection.getConnection();
            String query = "SELECT quantity FROM cart_items WHERE cartId = ? AND itemId = ?";
            statement = connection.prepareStatement(query);
            statement.setInt(1, cartId);
            statement.setInt(2, data.getItemId());
            resultSet = statement.executeQuery();

            if (resultSet.next()) {
                int quantity = resultSet.getInt("quantity");
                quantityInput.setText(String.valueOf(quantity));
            } else {
                quantityInput.setText("0"); // Default to 0 if no quantity is found
            }
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Error fetching item quantity: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            quantityInput.setText("0"); // Default to 0 on error
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pics = new com.snapshop.swing.PictureBox();
        txtDescription = new javax.swing.JTextPane();
        jSeparator1 = new javax.swing.JSeparator();
        lbPrice = new javax.swing.JLabel();
        lbBrand = new javax.swing.JLabel();
        lbItemName = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        quantityInput = new javax.swing.JTextField();
        increaseBtn = new javax.swing.JButton();
        decreaseBtn = new javax.swing.JButton();
        addToCartBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);

        txtDescription.setBorder(null);
        txtDescription.setFont(new java.awt.Font("Helvetica Neue", 2, 12)); // NOI18N
        txtDescription.setForeground(new java.awt.Color(153, 153, 153));
        txtDescription.setFocusable(false);
        txtDescription.setMargin(new java.awt.Insets(2, 2, 2, 2));
        txtDescription.setOpaque(false);

        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));

        lbPrice.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lbPrice.setForeground(new java.awt.Color(76, 76, 76));
        lbPrice.setText("$0.00");

        lbBrand.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lbBrand.setForeground(new java.awt.Color(76, 76, 76));
        lbBrand.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbBrand.setText("Brand");

        lbItemName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lbItemName.setForeground(new java.awt.Color(76, 76, 76));
        lbItemName.setText("Item");

        jSeparator2.setForeground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(76, 76, 76));
        jLabel1.setText("Quantity");

        quantityInput.setBackground(new java.awt.Color(221, 221, 221));
        quantityInput.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        quantityInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantityInput.setText("0");
        quantityInput.setBorder(null);
        quantityInput.setOpaque(true);

        increaseBtn.setBackground(new java.awt.Color(221, 221, 221));
        increaseBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        increaseBtn.setForeground(new java.awt.Color(255, 255, 255));
        increaseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/snapshop/icon/211877_plus_round_icon_20x20.png"))); // NOI18N
        increaseBtn.setBorder(null);
        increaseBtn.setBorderPainted(false);
        increaseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        increaseBtn.setFocusPainted(false);
        increaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseBtnActionPerformed(evt);
            }
        });

        decreaseBtn.setBackground(new java.awt.Color(221, 221, 221));
        decreaseBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        decreaseBtn.setForeground(new java.awt.Color(255, 255, 255));
        decreaseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/snapshop/icon/211863_minus_round_icon_20x20.png"))); // NOI18N
        decreaseBtn.setBorder(null);
        decreaseBtn.setBorderPainted(false);
        decreaseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        decreaseBtn.setFocusPainted(false);
        decreaseBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        decreaseBtn.setPreferredSize(new java.awt.Dimension(522, 522));
        decreaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseBtnActionPerformed(evt);
            }
        });

        addToCartBtn.setText("ADD TO CART");
        addToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(76, 76, 76));
        jLabel2.setText("Sizes");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6", "6.5", "7", "7.5", "8", "8.5", "9", "9.5", "10", "10.5", "11", "11.5", "12", "12.5", "13" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(decreaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(increaseBtn))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lbPrice)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addComponent(pics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pics, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbItemName)
                .addGap(12, 12, 12)
                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPrice)
                    .addComponent(lbBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(increaseBtn)
                    .addComponent(decreaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(addToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void increaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseBtnActionPerformed
        try {
            int quantity = Integer.parseInt(quantityInput.getText());
            if (quantity < 10) {
                quantity++;
                quantityInput.setText(String.valueOf(quantity));
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Maximum quantity is 10.", "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            // Handle invalid input gracefully
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid quantity. Resetting to 0.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            quantityInput.setText("0");
        }
    }//GEN-LAST:event_increaseBtnActionPerformed

    private void decreaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseBtnActionPerformed
        // TODO add your handling code here:
        try {
            int quantity = Integer.parseInt(quantityInput.getText());
            if (quantity > 0) {
                quantity--;
                quantityInput.setText(String.valueOf(quantity));
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Minimum quantity is 0.", "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            // Handle invalid input gracefully
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid quantity. Resetting to 0.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            quantityInput.setText("0");
        }
    }//GEN-LAST:event_decreaseBtnActionPerformed

    private void addToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartBtnActionPerformed
        // TODO add your handling code here:
        try {
            int quantity = Integer.parseInt(quantityInput.getText());

            if (quantity <= 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Quantity must be greater than 0.", "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
            }
            // Notify the listener
            listener.onAddToCart(data, quantity); 
            quantityInput.setText("0");
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid quantity. Please enter a valid number.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addToCartBtnActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCartBtn;
    private javax.swing.JButton decreaseBtn;
    private javax.swing.JButton increaseBtn;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbBrand;
    private javax.swing.JLabel lbItemName;
    private javax.swing.JLabel lbPrice;
    private com.snapshop.swing.PictureBox pics;
    private javax.swing.JTextField quantityInput;
    private javax.swing.JTextPane txtDescription;
    // End of variables declaration//GEN-END:variables
}
