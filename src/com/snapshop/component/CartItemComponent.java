/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.snapshop.component;

import com.snapshop.model.Cart;
import com.snapshop.model.Cart.CartItem;
import com.snapshop.model.ModelItem;
import java.text.DecimalFormat;

/**
 *
 * @author lucas
 */
public class CartItemComponent extends javax.swing.JPanel {

    private Cart cart;
    private CartItem data;
    private ModelItem item;

    /**
     * Creates new form CartItem
     */
    public CartItemComponent(Cart cart) {
        this.cart = cart;
        initComponents();
    }

    public CartItem getData() {
        return data;
    }

    public void setData(CartItem data) {
        this.data = data;
        item = data.getItem();
        lbItemName.setText(item.getItemName());
        txtDescription.setText(item.getDescription());
        lbBrand.setText(item.getBrand());
        DecimalFormat df = new DecimalFormat("$#, #00.00");
        lbPrice.setText(df.format(item.getPrice()));
        pic.setImage(item.getImage());
//        pic.repaint();
        quantityInput.setText(String.valueOf(data.getQuantity()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pic = new com.snapshop.swing.PictureBox();
        lbItemName = new javax.swing.JLabel();
        lbBrand = new javax.swing.JLabel();
        lbPrice = new javax.swing.JLabel();
        decreaseBtn = new javax.swing.JButton();
        quantityInput = new javax.swing.JTextField();
        increaseBtn = new javax.swing.JButton();
        txtDescription = new javax.swing.JTextPane();
        delBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setOpaque(false);

        pic.setImage(new javax.swing.ImageIcon(getClass().getResource("/com/snapshop/image/img1.png"))); // NOI18N

        lbItemName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lbItemName.setForeground(new java.awt.Color(76, 76, 76));
        lbItemName.setText("Item Name");

        lbBrand.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        lbBrand.setForeground(new java.awt.Color(76, 76, 76));
        lbBrand.setText("Brand");

        lbPrice.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lbPrice.setForeground(new java.awt.Color(76, 76, 76));
        lbPrice.setText("$0.00");

        decreaseBtn.setBackground(new java.awt.Color(255, 255, 255));
        decreaseBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        decreaseBtn.setForeground(new java.awt.Color(255, 255, 255));
        decreaseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/snapshop/icon/211863_minus_round_icon_20x20.png"))); // NOI18N
        decreaseBtn.setBorder(null);
        decreaseBtn.setBorderPainted(false);
        decreaseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        decreaseBtn.setFocusPainted(false);
        decreaseBtn.setMargin(new java.awt.Insets(2, 2, 2, 2));
        decreaseBtn.setOpaque(true);
        decreaseBtn.setPreferredSize(new java.awt.Dimension(522, 522));
        decreaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseBtnActionPerformed(evt);
            }
        });

        quantityInput.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        quantityInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        quantityInput.setText("0");
        quantityInput.setBorder(null);

        increaseBtn.setBackground(new java.awt.Color(255, 255, 255));
        increaseBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        increaseBtn.setForeground(new java.awt.Color(255, 255, 255));
        increaseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/snapshop/icon/211877_plus_round_icon_20x20.png"))); // NOI18N
        increaseBtn.setBorder(null);
        increaseBtn.setBorderPainted(false);
        increaseBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        increaseBtn.setFocusPainted(false);
        increaseBtn.setOpaque(true);
        increaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseBtnActionPerformed(evt);
            }
        });

        txtDescription.setBorder(null);
        txtDescription.setFont(new java.awt.Font("Helvetica Neue", 2, 12)); // NOI18N
        txtDescription.setForeground(new java.awt.Color(153, 153, 153));
        txtDescription.setFocusable(false);
        txtDescription.setMargin(new java.awt.Insets(2, 2, 2, 2));
        txtDescription.setOpaque(false);

        delBtn.setBackground(new java.awt.Color(255, 255, 255));
        delBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        delBtn.setForeground(new java.awt.Color(255, 255, 255));
        delBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/snapshop/icon/326606_delete_icon_20x20.png"))); // NOI18N
        delBtn.setBorder(null);
        delBtn.setBorderPainted(false);
        delBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delBtn.setFocusPainted(false);
        delBtn.setOpaque(true);
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Helvetica Neue", 2, 12)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(153, 153, 153));
        saveBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saveBtn.setText("Save for later");

        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbBrand)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                                .addComponent(decreaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(saveBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quantityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(increaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113)
                                .addComponent(lbPrice)
                                .addGap(34, 34, 34)
                                .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbItemName)
                            .addComponent(lbBrand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDescription))
                    .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 55, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbPrice)
                                .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(quantityInput)
                                    .addComponent(decreaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(increaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saveBtn)))
                        .addGap(6, 6, 6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void decreaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseBtnActionPerformed
        // TODO add your handling code here:
        try {
            int quantity = Integer.parseInt(quantityInput.getText());
            if (quantity > 1) { // Prevent quantity from going below 1
                quantity--;
                quantityInput.setText(String.valueOf(quantity));
                cart.setQuantity(item.getItemId(), quantity); // Update the model
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Minimum quantity is 1.", "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid quantity. Resetting to 1.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            quantityInput.setText("1");
        }
    }//GEN-LAST:event_decreaseBtnActionPerformed

    private void increaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseBtnActionPerformed
        try {
            int quantity = Integer.parseInt(quantityInput.getText());
            if (quantity < 10) { // Limit the maximum quantity
                quantity++;
                quantityInput.setText(String.valueOf(quantity));
                cart.setQuantity(item.getItemId(), quantity); // Update the model
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Maximum quantity is 10.", "Warning", javax.swing.JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid quantity. Resetting to 1.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            quantityInput.setText("1");
        }
    }//GEN-LAST:event_increaseBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        if (data != null) {
            // Show confirmation dialog
            int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
                    "Are you sure you want to delete this item from the cart?",
                    "Confirm Delete",
                    javax.swing.JOptionPane.YES_NO_OPTION);

            // If user confirms, proceed to delete
            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                // Remove the item from the cart
                // Assuming there's a reference to the Cart object somewhere, e.g., passed to this component
//                Cart cart = new Cart();
                cart.removeItem(item.getItemId());

                // Inform the user
//                javax.swing.JOptionPane.showMessageDialog(this, "Item deleted from the cart.", "Info", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                // Remove this component from the parent container
                java.awt.Container parent = this.getParent();
                if (parent != null) {
                    parent.remove(this); // Remove the component
                    parent.revalidate(); // Revalidate the parent to update the layout
                    parent.repaint();    // Repaint the parent to reflect changes
                }
//                this.getParent().remove(this);
//                this.getParent().revalidate();
//                this.getParent().repaint();
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "No item data available to delete.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_delBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decreaseBtn;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton increaseBtn;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbBrand;
    private javax.swing.JLabel lbItemName;
    private javax.swing.JLabel lbPrice;
    private com.snapshop.swing.PictureBox pic;
    private javax.swing.JTextField quantityInput;
    private javax.swing.JLabel saveBtn;
    private javax.swing.JTextPane txtDescription;
    // End of variables declaration//GEN-END:variables
}
